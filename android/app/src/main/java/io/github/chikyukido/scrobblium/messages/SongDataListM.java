// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/song_datam.proto
// Protobuf Java Version: 4.27.2

package io.github.chikyukido.scrobblium.messages;

/**
 * Protobuf type {@code io.github.chikyukido.scrobblium.messages.SongDataListM}
 */
public final class SongDataListM extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.github.chikyukido.scrobblium.messages.SongDataListM)
    SongDataListMOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      SongDataListM.class.getName());
  }
  // Use SongDataListM.newBuilder() to construct.
  private SongDataListM(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private SongDataListM() {
    songs_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.github.chikyukido.scrobblium.messages.SongDatam.internal_static_io_github_chikyukido_scrobblium_messages_SongDataListM_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.github.chikyukido.scrobblium.messages.SongDatam.internal_static_io_github_chikyukido_scrobblium_messages_SongDataListM_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.github.chikyukido.scrobblium.messages.SongDataListM.class, io.github.chikyukido.scrobblium.messages.SongDataListM.Builder.class);
  }

  public static final int SONGS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<io.github.chikyukido.scrobblium.messages.SongDataM> songs_;
  /**
   * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
   */
  @java.lang.Override
  public java.util.List<io.github.chikyukido.scrobblium.messages.SongDataM> getSongsList() {
    return songs_;
  }
  /**
   * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.github.chikyukido.scrobblium.messages.SongDataMOrBuilder> 
      getSongsOrBuilderList() {
    return songs_;
  }
  /**
   * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
   */
  @java.lang.Override
  public int getSongsCount() {
    return songs_.size();
  }
  /**
   * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
   */
  @java.lang.Override
  public io.github.chikyukido.scrobblium.messages.SongDataM getSongs(int index) {
    return songs_.get(index);
  }
  /**
   * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
   */
  @java.lang.Override
  public io.github.chikyukido.scrobblium.messages.SongDataMOrBuilder getSongsOrBuilder(
      int index) {
    return songs_.get(index);
  }

  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.chikyukido.scrobblium.messages.SongDataListM parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.github.chikyukido.scrobblium.messages.SongDataListM prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.github.chikyukido.scrobblium.messages.SongDataListM}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.github.chikyukido.scrobblium.messages.SongDataListM)
      io.github.chikyukido.scrobblium.messages.SongDataListMOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.chikyukido.scrobblium.messages.SongDatam.internal_static_io_github_chikyukido_scrobblium_messages_SongDataListM_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.chikyukido.scrobblium.messages.SongDatam.internal_static_io_github_chikyukido_scrobblium_messages_SongDataListM_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.chikyukido.scrobblium.messages.SongDataListM.class, io.github.chikyukido.scrobblium.messages.SongDataListM.Builder.class);
    }

    // Construct using io.github.chikyukido.scrobblium.messages.SongDataListM.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (songsBuilder_ == null) {
        songs_ = java.util.Collections.emptyList();
      } else {
        songs_ = null;
        songsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.github.chikyukido.scrobblium.messages.SongDatam.internal_static_io_github_chikyukido_scrobblium_messages_SongDataListM_descriptor;
    }

    @java.lang.Override
    public io.github.chikyukido.scrobblium.messages.SongDataListM getDefaultInstanceForType() {
      return io.github.chikyukido.scrobblium.messages.SongDataListM.getDefaultInstance();
    }

    @java.lang.Override
    public io.github.chikyukido.scrobblium.messages.SongDataListM build() {
      io.github.chikyukido.scrobblium.messages.SongDataListM result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.github.chikyukido.scrobblium.messages.SongDataListM buildPartial() {
      io.github.chikyukido.scrobblium.messages.SongDataListM result = new io.github.chikyukido.scrobblium.messages.SongDataListM(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.github.chikyukido.scrobblium.messages.SongDataListM result) {
      if (songsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          songs_ = java.util.Collections.unmodifiableList(songs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.songs_ = songs_;
      } else {
        result.songs_ = songsBuilder_.build();
      }
    }

    private void buildPartial0(io.github.chikyukido.scrobblium.messages.SongDataListM result) {
      int from_bitField0_ = bitField0_;
    }

    private int bitField0_;

    private java.util.List<io.github.chikyukido.scrobblium.messages.SongDataM> songs_ =
      java.util.Collections.emptyList();
    private void ensureSongsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        songs_ = new java.util.ArrayList<io.github.chikyukido.scrobblium.messages.SongDataM>(songs_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        io.github.chikyukido.scrobblium.messages.SongDataM, io.github.chikyukido.scrobblium.messages.SongDataM.Builder, io.github.chikyukido.scrobblium.messages.SongDataMOrBuilder> songsBuilder_;

    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public java.util.List<io.github.chikyukido.scrobblium.messages.SongDataM> getSongsList() {
      if (songsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(songs_);
      } else {
        return songsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public int getSongsCount() {
      if (songsBuilder_ == null) {
        return songs_.size();
      } else {
        return songsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public io.github.chikyukido.scrobblium.messages.SongDataM getSongs(int index) {
      if (songsBuilder_ == null) {
        return songs_.get(index);
      } else {
        return songsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public Builder setSongs(
        int index, io.github.chikyukido.scrobblium.messages.SongDataM value) {
      if (songsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSongsIsMutable();
        songs_.set(index, value);
        onChanged();
      } else {
        songsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public Builder setSongs(
        int index, io.github.chikyukido.scrobblium.messages.SongDataM.Builder builderForValue) {
      if (songsBuilder_ == null) {
        ensureSongsIsMutable();
        songs_.set(index, builderForValue.build());
        onChanged();
      } else {
        songsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public Builder addSongs(io.github.chikyukido.scrobblium.messages.SongDataM value) {
      if (songsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSongsIsMutable();
        songs_.add(value);
        onChanged();
      } else {
        songsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public Builder addSongs(
        int index, io.github.chikyukido.scrobblium.messages.SongDataM value) {
      if (songsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSongsIsMutable();
        songs_.add(index, value);
        onChanged();
      } else {
        songsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public Builder addSongs(
        io.github.chikyukido.scrobblium.messages.SongDataM.Builder builderForValue) {
      if (songsBuilder_ == null) {
        ensureSongsIsMutable();
        songs_.add(builderForValue.build());
        onChanged();
      } else {
        songsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public Builder addSongs(
        int index, io.github.chikyukido.scrobblium.messages.SongDataM.Builder builderForValue) {
      if (songsBuilder_ == null) {
        ensureSongsIsMutable();
        songs_.add(index, builderForValue.build());
        onChanged();
      } else {
        songsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public Builder addAllSongs(
        java.lang.Iterable<? extends io.github.chikyukido.scrobblium.messages.SongDataM> values) {
      if (songsBuilder_ == null) {
        ensureSongsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, songs_);
        onChanged();
      } else {
        songsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public Builder clearSongs() {
      if (songsBuilder_ == null) {
        songs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        songsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public Builder removeSongs(int index) {
      if (songsBuilder_ == null) {
        ensureSongsIsMutable();
        songs_.remove(index);
        onChanged();
      } else {
        songsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public io.github.chikyukido.scrobblium.messages.SongDataM.Builder getSongsBuilder(
        int index) {
      return getSongsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public io.github.chikyukido.scrobblium.messages.SongDataMOrBuilder getSongsOrBuilder(
        int index) {
      if (songsBuilder_ == null) {
        return songs_.get(index);  } else {
        return songsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public java.util.List<? extends io.github.chikyukido.scrobblium.messages.SongDataMOrBuilder> 
         getSongsOrBuilderList() {
      if (songsBuilder_ != null) {
        return songsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(songs_);
      }
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public io.github.chikyukido.scrobblium.messages.SongDataM.Builder addSongsBuilder() {
      return getSongsFieldBuilder().addBuilder(
          io.github.chikyukido.scrobblium.messages.SongDataM.getDefaultInstance());
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public io.github.chikyukido.scrobblium.messages.SongDataM.Builder addSongsBuilder(
        int index) {
      return getSongsFieldBuilder().addBuilder(
          index, io.github.chikyukido.scrobblium.messages.SongDataM.getDefaultInstance());
    }
    /**
     * <code>repeated .io.github.chikyukido.scrobblium.messages.SongDataM songs = 1;</code>
     */
    public java.util.List<io.github.chikyukido.scrobblium.messages.SongDataM.Builder> 
         getSongsBuilderList() {
      return getSongsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        io.github.chikyukido.scrobblium.messages.SongDataM, io.github.chikyukido.scrobblium.messages.SongDataM.Builder, io.github.chikyukido.scrobblium.messages.SongDataMOrBuilder> 
        getSongsFieldBuilder() {
      if (songsBuilder_ == null) {
        songsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            io.github.chikyukido.scrobblium.messages.SongDataM, io.github.chikyukido.scrobblium.messages.SongDataM.Builder, io.github.chikyukido.scrobblium.messages.SongDataMOrBuilder>(
                songs_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        songs_ = null;
      }
      return songsBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:io.github.chikyukido.scrobblium.messages.SongDataListM)
  }

  // @@protoc_insertion_point(class_scope:io.github.chikyukido.scrobblium.messages.SongDataListM)
  private static final io.github.chikyukido.scrobblium.messages.SongDataListM DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.github.chikyukido.scrobblium.messages.SongDataListM();
  }

  public static io.github.chikyukido.scrobblium.messages.SongDataListM getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SongDataListM>
      PARSER = new com.google.protobuf.AbstractParser<SongDataListM>() {
    @java.lang.Override
    public SongDataListM parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SongDataListM> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SongDataListM> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.github.chikyukido.scrobblium.messages.SongDataListM getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

